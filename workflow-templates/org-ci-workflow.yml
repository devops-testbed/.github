name: Org CI
on:
  branch_protection_rule:
    types: [created, edited, deleted]
  check_run:
    types: [created, rerequested, completed, requested_action]
  check_suite:
    types: [completed]
  create:
  delete:
  deployment:
  push:
    branches-ignore:    
      - 'mona/octocat'
      - 'releases/**-alpha'
    tags-ignore:        
      - v2
      - v1.*
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: 
      - $default-branch
      - '!releases/**-alpha'
    paths:
      - '**.js'
    tags:        
      - v2
      - v1.*
  workflow_dispatch:
  schedule:
    - cron: '30 5 * * 1,3'
    - cron: '30 5 * * 2,4'
  workflow_call:
    inputs:
      projectid:
        description: 'Project'
        default: '1'
        required: false
        type: string
    outputs:
      workflow_output1:
        description: "The first job output"
        value: ${{ jobs.test_schedule.outputs.job_output1 }}
      workflow_output2:
        description: "The second job output"
        value: ${{ jobs.build.outputs.job_output2 }}
jobs:
  test_schedule:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - id: step1
      - name: Not on Monday or Wednesday
        if: github.event.schedule != '30 5 * * 1,3'
        run: |
          echo "This step will be skipped on Monday and Wednesday"
          echo "::set-output name=test::hello"
      - name: Every time
        run: echo "This step will always run"
  sync_job:
    runs-on: ubuntu-latest'
    needs: test_schedule
    steps:
      - name: Print the input name to STDOUT
        run: echo ${{needs.test_schedule.outputs.output1}}
  build:
    runs-on: ubuntu-latest'
    permissions:
      repository-projects: write 
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Print the input name to STDOUT
        run: echo The projectid is ${{ inputs.projectid }}
      - name: Check token blanked
        run: echo The token is ${{ secrets.GITHUB_TOKEN }}
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: debug
        env:
          GH_EVENT: ${{ toJson(github.event) }}
        run: echo ${{ toJson(github.event) }}
